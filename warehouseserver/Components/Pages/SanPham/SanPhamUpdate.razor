@using warehouseserver.Services
@using warehouseserver.Models
@using Microsoft.AspNetCore.Components.Forms
@inject SanPhamService sanPhamService
@inject LoaiSanPhamService loaiSanPhamService
@inject NhaCungCapService nhaCungCapService
@inject DonViTinhService donViTinhService

<EditForm Model="@sanPham" OnValidSubmit="@UpdateSPSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="ma_lsp">Mã SP</label>
        <InputText id="ma_lsp"
                   @bind-Value=sanPham.MaSP
                   class="form-control" />
        <ValidationMessage For="@(() => sanPham.MaSP)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="ten_lsp">Tên SP</label>
        <InputText id="ten_lsp"
                   @bind-Value=sanPham.TenSP
                   class="form-control" />
        <ValidationMessage For="@(() => sanPham.TenSP)" class="text-danger" />
    </div>
    <RadzenLabel Text="Loại sản phẩm" Component="DropDownBindValue" />
    <RadzenDropDown @bind-Value=@sanPham.LSPId
                    Data=@LoaiSanPhamList
                    TextProperty="TenLSP"
                    ValueProperty="Id"
                    Style="width: 100%; max-width: 400px;"
                    Change="@(args => sanPham.TenLSP = LoaiSanPhamList.FirstOrDefault(x => x.Id == sanPham.LSPId)?.TenLSP)" />
    <RadzenLabel Text="Đơn vị tính" Component="DropDownBindValue" />


    <RadzenDropDown @bind-Value=@sanPham.DVTId
                    Data=@DonViTinhList
                    TextProperty="TenDonViTinh"
                    ValueProperty="Id"
                    Style="width: 100%; max-width: 400px;"
                    Change="@(args => sanPham.TenDonViTinh = DonViTinhList.FirstOrDefault(x => x.Id == sanPham.DVTId)?.TenDonViTinh)" />

    <div class="form-group">
        <label for="ghi_chu">Ghi chú</label>
        <InputText id="ghi_chu"
                   @bind-Value=sanPham.GhiChu
                   class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Lưu</button>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public EventCallback OnSuccess { get; set; }

    private SanPham sanPham = new SanPham();
    private List<LoaiSanPham> LoaiSanPhamList = new List<LoaiSanPham>();
    private List<DonViTinh> DonViTinhList = new List<DonViTinh>();
    protected override async Task OnInitializedAsync()
    {
        LoaiSanPhamList = await loaiSanPhamService.GetAllLoaiSanPham();
        DonViTinhList = await donViTinhService.GetAllDonViTinh();
    }
    protected override async Task OnParametersSetAsync()
    {
        sanPham = await sanPhamService.GetSanPhamById(Id);
    }

    private async Task UpdateSPSubmit()
    {
        if (sanPham != null)
        {
            var success = await sanPhamService.UpdateSanPham(sanPham);
            if (success)
            {
                await OnSuccess.InvokeAsync();
            }
            else
            {
                Console.WriteLine("Cập nhật thất bại!");
            }
        }
    }
}
